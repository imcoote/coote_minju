# 퇴사 [14501]
"""*******************************************************************************
 * 소요시간: 1시간
 * 시간복잡도: O(N)
 * 메모리: 	32412 kb
 * 시간: 40 ms
 *******************************************************************************"""
N = int(input())  # 전체 일 수
T = [0] * (N + 1)  # 상담 기간 (T[i])
P = [0] * (N + 1)  # 수익 (P[i])
dp = [0] * (N + 2)  # N+1일 이후에는 일을 할 수 없으므로 dp 테이블 크기는 N+2

for i in range(1, N + 1):
    T[i], P[i] = map(int, input().split())

for i in range(1, N + 1):
    # 상담을 진행하지 않는 경우 -> 현재까지의 최대값을 다음 날로 갱신
    dp[i + 1] = max(dp[i + 1], dp[i])

    # 상담을 진행하는 경우 -> 상담이 끝나는 날 갱신
    if i + T[i] <= N + 1:  # 상담이 N+1을 넘어가지 않는 경우 고려
        dp[i + T[i]] = max(dp[i + T[i]], dp[i] + P[i])

print(dp[N + 1])